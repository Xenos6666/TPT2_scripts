:import factory constants

:local int tier

tier = 10
tierloop:

{add_queue(tier, cable, max(0., {get_queue(tier, insul_cable)} * i2d((1 + tier / 8) * (max(1, tier - 2) - tier / 8 + tier / 10))))}
{add_queue(1, rubber + min(1, tier / 3), max(0., {get_queue(tier, insul_cable)} * i2d(min(2, tier) * (max(1, tier - 2) - tier / 8 + tier / 10))))}

{add_queue(tier, plate, max(0., {get_queue(tier, pump)} * 2.))}
{add_queue(tier, ring, max(0., {get_queue(tier, pump)} * 2.))}
{add_queue(1, rubber_plate, max(0., {get_queue(tier, pump)} * 4.))}
{add_queue(tier, motor, max(0., {get_queue(tier, pump)}))}

{add_queue(tier, plate, max(0., {get_queue(tier, motor)} * 4.))}
{add_queue(tier, rod, max(0., {get_queue(tier, motor)} * 2.))}
{add_queue(tier, screw, max(0., {get_queue(tier, motor)}))}
{add_queue(tier, wire, max(0., {get_queue(tier, motor)}))}
{add_queue(1, rubber, max(0., {get_queue(tier, motor)}))}

gotoif(nochip, tier > 5)
gotoif(noprevtier, tier == 1)
{add_queue(tier - 1, chip, max(0., {get_queue(tier, chip)}) * i2d(min(12, 4 * (tier - 1))))}
noprevtier:
{add_queue(tier * 2 - 1, circuit, max(0., {get_queue(tier, chip)}) * 2.)}
{add_queue(tier * 2 - 1, board, max(0., {get_queue(tier, chip)}) * i2d(min(2, tier) * (1 + min(1, max(0, tier - 1)) + max(0, tier - 3))))}
{add_queue(tier * 2, circuit, max(0., {get_queue(tier, chip)}) * i2d(2 * (1 + min(tier - 1, max(0, 4 - tier)))))}
{add_queue(tier * 2, board, max(0., {get_queue(tier, chip)}) * i2d(min(2, tier) * (1 + max(0, tier - 3) + min(1, max(0, tier - 3)))))}
nochip:

tier -= 1
gotoif(tierloop, tier > 0)
wait(0.0)
