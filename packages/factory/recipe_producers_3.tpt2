:import factory constants

:local int tier

tier = 5
start:

gotoif(skip, tier == 1)
{add_queue(tier - 1, yellow_producer, max(0., {get_queue(tier, yellow_producer)}))}
{add_queue(tier - 1, pink_producer, max(0., {get_queue(tier, pink_producer)}))}
{add_queue(tier - 1, lightblue_producer, max(0., {get_queue(tier, lightblue_producer)}))}
{add_queue(tier - 1, cyan_producer, max(0., {get_queue(tier, cyan_producer)}))}
skip:

;yellow_producer
{add_queue(tier, chip, max(0., {get_queue(tier, yellow_producer)} * i2d((64423 / (10 ^ (tier - 1))) % 10)))}
{add_queue(tier * 2, motor, max(0., {get_queue(tier, yellow_producer)}))}
{add_queue((97531 / (10 ^ (tier - 1))) % 10, insul_cable, max(0., {get_queue(tier, yellow_producer)} * i2d((64422 / (10 ^ (tier - 1))) % 10)))}
{add_queue((97530 / (10 ^ (tier - 1))) % 10, block, max(0., {get_queue(tier, yellow_producer)} * i2d((939312 / (16 ^ (tier - 1))) % 16)))}

;pink_producer
{add_queue(tier, chip, max(0., {get_queue(tier, pink_producer)} * i2d((64444 / (10 ^ (tier - 1))) % 10)))}
{add_queue((98642 / (10 ^ (tier - 1))) % 10, insul_cable, max(0., {get_queue(tier, pink_producer)} * i2d((66664 / (10 ^ (tier - 1))) % 10)))}
{add_queue(tier * 2, pipe, max(0., {get_queue(tier, pink_producer)} * i2d((84444 / (10 ^ (tier - 1))) % 10)))}

;lightblue_producer
{add_queue(tier, chip, max(0., {get_queue(tier, lightblue_producer)} * i2d((42222 / (10 ^ (tier - 1))) % 10)))}
{add_queue(tier * 2, plate, max(0., {get_queue(tier, lightblue_producer)} * 4.))}
{add_queue(tier * 2, ring, max(0., {get_queue(tier, lightblue_producer)} * i2d(2 * ((64443 / (10 ^ (tier - 1))) % 10))))}

;cyan_producer
{add_queue(tier, chip, max(0., {get_queue(tier, cyan_producer)} * i2d((42222 / (10 ^ (tier - 1))) % 10)))}
{add_queue(tier * 2, insul_cable, max(0., {get_queue(tier, cyan_producer)} * i2d(2 * ((64443 / (10 ^ (tier - 1))) % 10))))}
{add_queue((97531 / (10 ^ (tier - 1))) % 10, block, max(0., {get_queue(tier, cyan_producer)} * 4.))}

tier = tier - 1
gotoif(start, tier > 0)
