:import factory constants

:local double previous_amount
:local int tier

tier = 0
tierloop:
tier = tier + 1

previous_amount = count("producer.headquarters", tier)
craft("producer.headquarters", tier, {get_queue(tier, purple_producer)})
{subtract_queue(tier, purple_producer, count("producer.headquarters", tier) - previous_amount)}

previous_amount = count("producer.powerplant", tier)
craft("producer.powerplant", tier, {get_queue(tier, yellow_producer)})
{subtract_queue(tier, yellow_producer, count("producer.powerplant", tier) - previous_amount)}

previous_amount = count("producer.arcade", tier)
craft("producer.arcade", tier, {get_queue(tier, pink_producer)})
{subtract_queue(tier, pink_producer, count("producer.arcade", tier) - previous_amount)}

previous_amount = count("producer.tradingpost", tier)
craft("producer.tradingpost", tier, {get_queue(tier, lightblue_producer)})
{subtract_queue(tier, lightblue_producer, count("producer.tradingpost", tier) - previous_amount)}

previous_amount = count("producer.shipyard", tier)
craft("producer.shipyard", tier, {get_queue(tier, cyan_producer)})
{subtract_queue(tier, cyan_producer, count("producer.shipyard", tier) - previous_amount)}

previous_amount = count("producer.museum", tier)
craft("producer.museum", tier, {get_queue(tier, grey_producer)})
{subtract_queue(tier, grey_producer, count("producer.museum", tier) - previous_amount)}


gotoif(tierloop, tier < 5)
