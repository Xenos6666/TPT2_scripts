:import factory constants

:local int tier
:local double previous_amount

tierloop:
tier += 1

previous_amount = count("machine.assembler", tier)
craft("machine.assembler", tier, {get_queue(tier, assembly)})
{subtract_queue(tier, assembly, count("machine.assembler", tier) - previous_amount)}
noassembly:

previous_amount = count("machine.refinery", tier)
craft("machine.refinery", tier, {get_queue(tier, refiner)})
{subtract_queue(tier, refiner, count("machine.refinery", tier) - previous_amount)}
norefiner:

previous_amount = count("machine.oven", tier)
craft("machine.oven", tier, {get_queue(tier, oven)})
{subtract_queue(tier, oven, count("machine.oven", tier) - previous_amount)}
nooven:

previous_amount = count("machine.presser", tier)
craft("machine.presser", tier, {get_queue(tier, presser)})
{subtract_queue(tier, presser, count("machine.presser", tier) - previous_amount)}
nopresser:

previous_amount = count("machine.cutter", tier)
craft("machine.cutter", tier, {get_queue(tier, cutter)})
{subtract_queue(tier, cutter, count("machine.cutter", tier) - previous_amount)}
nocutter:

gotoif(tierloop, tier < 10)
