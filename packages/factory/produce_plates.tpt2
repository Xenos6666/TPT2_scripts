:import factory constants

:global int _tier
:local double previous_amount
:local double limit

previous_amount = count("ingot", _tier)
produce("ingot", _tier, min(previous_amount, {get_queue(_tier, plate)}), "presser")
{subtract_queue(_tier, plate, (previous_amount - count("ingot", _tier)))}
noproduceplates:

previous_amount = count("plate", _tier)
produce("plate", _tier, min(previous_amount, {get_queue(_tier, pipe)}), "shaper")
{subtract_queue(_tier, pipe, (previous_amount - count("plate", _tier)))}
noproducepipes:

gotoif(noproducedenseplates, active("presser"))
previous_amount = count("plate.stack", _tier)
produce("plate.stack", _tier, min(previous_amount, {get_queue(_tier, dense_plate)}), "presser")
{subtract_queue(_tier, dense_plate, (previous_amount - count("plate.stack", _tier)))}
noproducedenseplates:

previous_amount = count("block", _tier)
produce("block", _tier, min(previous_amount, {get_queue(_tier, dense_block)}), "boiler")
{subtract_queue(_tier, dense_block, (previous_amount - count("block", _tier)))}
noproducedenseblocks:

wait(0.0)
