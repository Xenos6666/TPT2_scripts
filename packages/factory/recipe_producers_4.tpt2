:import factory constants

:local int tier

tier = 5
start:

gotoif(skip, tier == 1)
{add_queue(-1 + tier, grey_producer, max(0., {get_queue(tier, grey_producer)}))}
{add_queue(-1 + tier, black_producer, max(0., {get_queue(tier, black_producer)}))}
skip:

;grey_producer
{add_queue(tier, chip, max(0., {get_queue(tier, grey_producer)} * i2d((422220 / (10 ^ tier)) % 10)))}
{add_queue(3 + ((764200 / (10 ^ tier)) % 10), insul_cable, max(0., {get_queue(tier, grey_producer)} * i2d((977760 / (10 ^ tier)) % 10)))}
{add_queue(tier * 2, block, max(0., {get_queue(tier, grey_producer)} * i2d((755540 / (10 ^ tier)) % 10)))}

;black_producer
{add_queue(tier, chip, max(0., {get_queue(tier, black_producer)} * i2d((422220 / (10 ^ tier)) % 10)))}
{add_queue(tier * 2, motor, max(0., {get_queue(tier, black_producer)} * 2.))}
{add_queue(tier * 2, pump, max(0., {get_queue(tier, black_producer)} * i2d((533320 / (10 ^ tier)) % 10)))}
{add_queue(tier * 2, pipe, max(0., {get_queue(tier, black_producer)} * 2.))}
{add_queue((975310 / (10 ^ tier)) % 10, dense_block, max(0., {get_queue(tier, black_producer)} * i2d((755540 / (10 ^ tier)) % 10)))}

tier = tier - 1
gotoif(start, tier > 0)
