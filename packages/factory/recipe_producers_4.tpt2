:import factory constants

:local int tier

tier = 5
start:

gotoif(skip, tier == 1)
{add_queue(tier - 1, grey_producer, max(0., {get_queue(tier, grey_producer)}))}
{add_queue(tier - 1, black_producer, max(0., {get_queue(tier, black_producer)}))}
skip:

;grey_producer
{add_queue(tier, chip, max(0., {get_queue(tier, grey_producer)} * i2d((42222 / (10 ^ (tier - 1))) % 10)))}
{add_queue((3 + ((76420 / (10 ^ (tier - 1))) % 10)), insul_cable, max(0., {get_queue(tier, grey_producer)} * i2d((97776 / (10 ^ (tier - 1))) % 10)))}
{add_queue(tier * 2, block, max(0., {get_queue(tier, grey_producer)} * i2d((75554 / (10 ^ (tier - 1))) % 10)))}

;black_producer
{add_queue(tier, chip, max(0., {get_queue(tier, black_producer)} * i2d((42222 / (10 ^ (tier - 1))) % 10)))}
{add_queue(tier * 2, motor, max(0., {get_queue(tier, black_producer)} * 2.))}
{add_queue(tier * 2, pump, max(0., {get_queue(tier, black_producer)} * i2d((53332 / (10 ^ (tier - 1))) % 10)))}
{add_queue(tier * 2, pipe, max(0., {get_queue(tier, black_producer)} * 2.))}
{add_queue((97531 / (10 ^ (tier - 1))) % 10, dense_block, max(0., {get_queue(tier, black_producer)} * i2d((75554 / (10 ^ (tier - 1))) % 10)))}

tier = tier - 1
gotoif(start, tier > 0)
