:import factory constants

:local double previous_amount
:local int tier

tier = 0
tierloop:
tier = tier + 1

previous_amount = count("producer.town", tier)
craft("producer.town", tier, {get_queue(tier, white_producer)})
{subtract_queue(tier, white_producer, count("producer.town", tier) - previous_amount)}

previous_amount = count("producer.factory", tier)
craft("producer.factory", tier, {get_queue(tier, red_producer)})
{subtract_queue(tier, red_producer, count("producer.factory", tier) - previous_amount)}

previous_amount = count("producer.mine", tier)
craft("producer.mine", tier, {get_queue(tier, orange_producer)})
{subtract_queue(tier, orange_producer, count("producer.mine", tier) - previous_amount)}

previous_amount = count("producer.workshop", tier)
craft("producer.workshop", tier, {get_queue(tier, blue_producer)})
{subtract_queue(tier, blue_producer, count("producer.workshop", tier) - previous_amount)}

previous_amount = count("producer.constructionFirm", tier)
craft("producer.constructionFirm", tier, {get_queue(tier, brown_producer)})
{subtract_queue(tier, brown_producer, count("producer.constructionFirm", tier) - previous_amount)}

previous_amount = count("producer.laboratory", tier)
craft("producer.laboratory", tier, {get_queue(tier, green_producer)})
{subtract_queue(tier, green_producer, count("producer.laboratory", tier) - previous_amount)}


gotoif(tierloop, tier < 5)
