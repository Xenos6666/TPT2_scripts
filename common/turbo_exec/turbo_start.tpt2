
:name turbo start

; This script is a compatibility script for supporting TE2.1 scripts.
; It performs the same functions as TE2.2:start, but with a different
; script name.


; This variable is used to track how many scripts are using turbo exec.
; It's incremented each time `turbo start` is called, and decremented
; every time `turbo stop` is called. When it reaches 0, turbo is stopped
; and waits for the next script to register.
:global int turbo.register

; This variable is used to recieve state information from `<turbo> register`.
:global string turbo.state

turbo.register += 1 ; Increment the registry counter

; This should guarantee turbo exec is up and is gonna keep running until
; the next call to `turbo stop` (assuming no script interferes or causes
; undefined behavior).
; For instance, if `turbo start` is called shortly before cycles.max is
; reached (due to another script using turbo), without this check it would
; return just as turbo is stopping.
; `goto` is being used here to stay consistent with `turbo stop`.
wait:
goto(if(turbo.state == "running", end, wait))

; Finishing the script with a noop is important, else the script will get
; stuck on the `goto` even after turbo finished.
wait(0.0)
end:
